on:
  push:
    branches:
    - actions
  pull_request: {}

jobs:
  latest_ubuntu:
    if: ${{ false }}
    runs-on: ubuntu-20.04
    env:
      PYVERSIONS: "python3.8 python3.9"
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: 'Build CI'
      run: |
        cd $GITHUB_WORKSPACE
        ./ci/build_linux.sh
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: python-wheels-linux
        path: bindings/python/dist/*
  windows:
    runs-on: windows-2019
    if: ${{ false }}
    env:
      CI_ARCH: ${{matrix.CI_ARCH}}
      BUILDING_SYNTHIZER: "1"
      CI_WINDOWS: "1"
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Cache Pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{matrix.CI_ARCH}}
        restore-keys: |
          ${{ runner.os }}-pip-${{matrix.CI_ARCH}}
    - name: Configure MSVC Environment Variables
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\enterprise\VC\Auxiliary\Build\vcvars%CI_ARCH%.bat"
        set > %GITHUB_ENV%
    - name: Build C Libraries
      shell: powershell
      run: |
        set-location $Env:GITHUB_WORKSPACE
        ./ci/build_c.ps1
    - name: Build python Wheels
      shell: powershell
      run: |
        set-location $Env:GITHUB_WORKSPACE
        ./ci/build_python.ps1
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: python-wheels-win${{matrix.CI_ARCH}}
        path: bindings/python/dist/*
    strategy:
      fail-fast: true
      matrix:
        CI_ARCH: ['32', '64']
  build_docs:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Cache Cargo
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-cargo-mdbook
        restore-keys: |
          ${{ runner.os }}-cargo-mdbook
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.cargo/
          ~/mdbook-build
    - name: Install mdbook
      run: CARGO_TARGET_DIR=~/mdbook-build cargo install mdbook mdbook-linkcheck
    - name: Build Manual
      run: |
        cd $GITHUB_WORKSPACE/manual
        mdbook build
    - uses: actions/upload-artifact@v2
      with:
        name: manual
        path: manual/book/html/**
